import yfinance as yf
import matplotlib.pyplot as plt
import pandas as pd
from datetime import datetime
import dateutil.relativedelta as rd

# Function to get stock historical data
def get_stock_data(ticker, start_date, end_date):
    try:
        stock = yf.Ticker(ticker)
        hist = stock.history(start=start_date, end=end_date)

        if hist.empty:
            raise ValueError("No data available for the given input.")

        # Calculate 50-Day moving average
        hist['50-Day MA'] = hist['Close'].rolling(window=50).mean()
        return hist
    except Exception as e:
        print(f"An error occurred while fetching data for {ticker}: {e}")
        return None

# Function to filter stocks based on price range
def filter_stocks_by_price(nse_stocks, price_low, price_high):
    filtered_stocks = []
    for ticker in nse_stocks:
        try:
            ticker_input = ticker + ".NS"  # Append ".NS" to specify the NSE exchange
            stock = yf.Ticker(ticker_input)
            hist = stock.history(period="1d")  # Fetch latest closing price
            
            if not hist.empty:
                latest_close = hist['Close'].iloc[-1]
                if price_low <= latest_close <= price_high:
                    filtered_stocks.append((ticker, latest_close))
        except Exception as e:
            print(f"An error occurred while fetching data for {ticker}: {e}")
    return filtered_stocks

# Main execution
ticker_input = input("Enter the NSE stock ticker (e.g., TCS, INFY): ").upper()
ticker_input += ".NS"  # Append ".NS" to specify the NSE exchange

# Ask user for time frame selection
print("\nSelect time range option:")
print("1. 1 month")
print("2. 2 months")
print("3. 6 months")
print("4. 1 year")
print("5. 2 years")
print("6. 5 years")
print("7. Custom Date Range")
time_choice = input("Enter your choice (1-7): ")

# Calculate start and end date based on user input
end_date = datetime.now()
if time_choice == '1':
    start_date = end_date - rd.relativedelta(months=1)
elif time_choice == '2':
    start_date = end_date - rd.relativedelta(months=2)
elif time_choice == '3':
    start_date = end_date - rd.relativedelta(months=6)
elif time_choice == '4':
    start_date = end_date - rd.relativedelta(years=1)
elif time_choice == '5':
    start_date = end_date - rd.relativedelta(years=2)
elif time_choice == '6':
    start_date = end_date - rd.relativedelta(years=5)
elif time_choice == '7':
    # Custom date input for month and year only
    start_date_input = input("Enter the start month and year (YYYY-MM): ")
    start_date = pd.to_datetime(start_date_input + "-01")

    # Ask for end date or option for "today"
    print("\nSelect end date option:")
    print("1. Today")
    print("2. Custom End Date")
    end_choice = input("Enter your choice (1 or 2): ")

    if end_choice == '1':
        end_date = datetime.now()
    elif end_choice == '2':
        end_date_input = input("Enter the end month and year (YYYY-MM): ")
        end_date = pd.to_datetime(end_date_input + "-01") + rd.relativedelta(months=1) - pd.Timedelta(days=1)
    else:
        print("Invalid option, setting end date to today.")
        end_date = datetime.now()
else:
    print("Invalid option, exiting.")
    exit()

# Get file name to save data
file_name = input("Enter the name of the Excel file to save the data (e.g., 'stock_data.xlsx'): ")

# Ensure the file name ends with .xlsx
if not file_name.endswith('.xlsx'):
    file_name += '.xlsx'

# Fetch historical data for the specified stock
hist = get_stock_data(ticker_input, start_date, end_date)

if hist is not None:
    # Set display options to show all rows and columns
    pd.set_option('display.max_rows', None)  # Display all rows
    pd.set_option('display.max_columns', None)  # Display all columns

    # Print the stock's closing price and 50-Day moving average
    print(hist[['Close', '50-Day MA']])

    # Plotting option
    plot_input = input("Do you want to plot the stock price and 50-Day moving average? (yes/no): ").lower()

    if plot_input == "yes":
        # Plot the closing price and 50-Day moving average on the same graph
        plt.figure(figsize=(10, 5))
        plt.plot(hist.index, hist['Close'], label="Closing Price", color="blue")
        plt.plot(hist.index, hist['50-Day MA'], label="50-Day Moving Average", color="orange")
        plt.title(f"{ticker_input[:-3]} Stock Price and 50-Day Moving Average")  # Remove ".NS" for title
        plt.xlabel("Date")
        plt.ylabel("Price")
        plt.xticks(rotation=90)
        plt.legend()
        plt.grid()
        plt.show()  # Ensure this line doesn't interrupt the execution flow

    # Remove timezone from the index to avoid issues with saving to Excel
    hist.index = hist.index.tz_localize(None)

    # Save the data to an Excel file
    hist.to_excel(file_name)
    print(f"Stock data with 50-Day Moving Average has been exported to {file_name}")

    # Read back the Excel file to confirm
    df = pd.read_excel(file_name)
    print(df)

# Load NSE stock tickers (for example purpose, using a hardcoded list)
df=pd.read_csv('EQUITY_L.csv')
nse_stocks=df['SYMBOL'].to_list()

nse_stocks =  ['20MICRONS',
 '21STCENMGM',
 '360ONE',
 '3IINFOLTD',
 '3MINDIA',
 '3PLAND',
 '5PAISA',
 '63MOONS',
 'A2ZINFRA',
 'AAATECH',
 'AADHARHFC',
 'AAKASH',
 'AAREYDRUGS',
 'AARON',
 'AARTECH',
 'AARTIDRUGS',
 'AARTIIND',
 'AARTIPHARM',
 'AARTISURF',
 'AARVEEDEN',
 'AARVI',
 'AAVAS',
 'ABAN',
 'ABB',
 'ABBOTINDIA',
 'ABCAPITAL',
 'ABDL',
 'ABFRL',
 'ABMINTLLTD',
 'ABREL',
 'ABSLAMC',
 'ACC',
 'ACCELYA',
 'ACCURACY',
 'ACE',
 'ACEINTEG',
 'ACI',
 'ACL',
 'ACLGATI',
 'ADANIENSOL',
 'ADANIENT',
 'ADANIGREEN',
 'ADANIPORTS',
 'ADANIPOWER',
 'ADFFOODS',
 'ADL',
 'ADORWELD',
 'ADROITINFO',
 'ADSL',
 'ADVANIHOTR',
 'ADVENZYMES',
 'AEGISLOG',
 'AEROFLEX',
 'AETHER',
 'AFFLE',
 'AFIL',
 'AGARIND',
 'AGI',
 'AGIIL',
 'AGRITECH',
 'AGROPHOS',
 'AGSTRA',
 'AHL',
 'AHLADA',
 'AHLEAST',
 'AHLUCONT',
 'AIAENG',
 'AIIL',
 'AIRAN',
 'AIROLAM',
 'AJANTPHARM',
 'AJMERA',
 'AJOONI',
 'AKASH',
 'AKG',
 'AKI',
 'AKSHAR',
 'AKSHARCHEM',
 'AKSHOPTFBR',
 'AKUMS',
 'AKZOINDIA',
 'ALANKIT',
 'ALBERTDAVD',
 'ALEMBICLTD',
 'ALICON',
 'ALKALI',
 'ALKEM',
 'ALKYLAMINE',
 'ALLCARGO',
 'ALLDIGI',
 'ALMONDZ',
 'ALOKINDS',
 'ALPA',
 'ALPHAGEO',
 'ALPSINDUS',
 'AMBER',
 'AMBICAAGAR',
 'AMBIKCO',
 'AMBUJACEM',
 'AMDIND',
 'AMIORG',
 'AMJLAND',
 'AMNPLST',
 'AMRUTANJAN',
 'ANANDRATHI',
 'ANANTRAJ',
 'ANDHRAPAP',
 'ANDHRSUGAR',
 'ANGELONE',
 'ANIKINDS',
 'ANKITMETAL',
 'ANMOL',
 'ANTGRAPHIC',
 'ANUP',
 'ANURAS',
 'APARINDS',
 'APCL',
 'APCOTEXIND',
 'APEX',
 'APLAPOLLO',
 'APLLTD',
 'APOLLO',
 'APOLLOHOSP',
 'APOLLOPIPE',
 'APOLLOTYRE',
 'APOLSINHOT',
 'APTECHT',
 'APTUS',
 'ARCHIDPLY',
 'ARCHIES',
 'ARE&M',
 'ARENTERP',
 'ARIES',
 'ARIHANTCAP',
 'ARIHANTSUP',
 'ARKADE',
 'ARMANFIN',
 'AROGRANITE',
 'ARROWGREEN',
 'ARSHIYA',
 'ARSSINFRA',
 'ARTEMISMED',
 'ARTNIRMAN',
 'ARVEE',
 'ARVIND',
 'ARVINDFASN',
 'ARVSMART',
 'ASAHIINDIA',
 'ASAHISONG',
 'ASAL',
 'ASALCBR',
 'ASHAPURMIN',
 'ASHIANA',
 'ASHIMASYN',
 'ASHOKA',
 'ASHOKAMET',
 'ASHOKLEY',
 'ASIANENE',
 'ASIANHOTNR',
 'ASIANPAINT',
 'ASIANTILES',
 'ASKAUTOLTD',
 'ASMS',
 'ASPINWALL',
 'ASTEC',
 'ASTERDM',
 'ASTRAL',
 'ASTRAMICRO',
 'ASTRAZEN',
 'ASTRON',
 'ATALREAL',
 'ATAM',
 'ATFL',
 'ATGL',
 'ATL',
 'ATLANTAA',
 'ATUL',
 'ATULAUTO',
 'AUBANK',
 'AURIONPRO',
 'AUROPHARMA',
 'AURUM',
 'AUSOMENT',
 'AUTOAXLES',
 'AUTOIND',
 'AVADHSUGAR',
 'AVALON',
 'AVANTEL',
 'AVANTIFEED',
 'AVG',
 'AVONMORE',
 'AVROIND',
 'AVTNPL',
 'AWFIS',
 'AWHCL',
 'AWL',
 'AXISBANK',
 'AXISCADES',
 'AXITA',
 'AYMSYNTEX',
 'AZAD',
 'BAFNAPH',
 'BAGFILMS',
 'BAIDFIN',
 'BAJAJ-AUTO',
 'BAJAJCON',
 'BAJAJELEC',
 'BAJAJFINSV',
 'BAJAJHCARE',
 'BAJAJHFL',
 'BAJAJHIND',
 'BAJAJHLDNG',
 'BAJEL',
 'BAJFINANCE',
 'BALAJEE',
 'BALAJITELE',
 'BALAMINES',
 'BALAXI',
 'BALKRISHNA',
 'BALKRISIND',
 'BALMLAWRIE',
 'BALPHARMA',
 'BALRAMCHIN',
 'BALUFORGE',
 'BANARBEADS',
 'BANARISUG',
 'BANCOINDIA',
 'BANDHANBNK',
 'BANG',
 'BANKA',
 'BANKBARODA',
 'BANKINDIA',
 'BANSALWIRE',
 'BANSWRAS',
 'BARBEQUE',
 'BASF',
 'BASML',
 'BATAINDIA',
 'BAYERCROP',
 'BBL',
 'BBOX',
 'BBTC',
 'BBTCL',
 'BCLIND',
 'BCONCEPTS',
 'BDL',
 'BEARDSELL',
 'BECTORFOOD',
 'BEDMUTHA',
 'BEL',
 'BEML',
 'BEPL',
 'BERGEPAINT',
 'BESTAGRO',
 'BFINVEST',
 'BFUTILITIE',
 'BGRENERGY',
 'BHAGCHEM',
 'BHAGERIA',
 'BHAGYANGR',
 'BHANDARI',
 'BHARATFORG',
 'BHARATGEAR',
 'BHARATRAS',
 'BHARATWIRE',
 'BHARTIARTL',
 'BHARTIHEXA',
 'BHEL',
 'BIGBLOC',
 'BIKAJI',
 'BIL',
 'BINANIIND',
 'BIOCON',
 'BIOFILCHEM',
 'BIRLACABLE',
 'BIRLACORPN',
 'BIRLAMONEY',
 'BLAL',
 'BLBLIMITED',
 'BLISSGVS',
 'BLKASHYAP',
 'BLS',
 'BLSE',
 'BLUECHIP',
 'BLUEDART',
 'BLUEJET',
 'BLUESTARCO',
 'BODALCHEM',
 'BOMDYEING',
 'BOROLTD',
 'BORORENEW',
 'BOROSCI',
 'BOSCHLTD',
 'BPCL',
 'BPL',
 'BRIGADE',
 'BRITANNIA',
 'BRNL',
 'BROOKS',
 'BSE',
 'BSHSL',
 'BSL',
 'BSOFT',
 'BTML',
 'BURNPUR',
 'BUTTERFLY',
 'BVCL',
 'BYKE',
 'CALSOFT',
 'CAMLINFINE',
 'CAMPUS',
 'CAMS',
 'CANBK',
 'CANFINHOME',
 'CANTABIL',
 'CAPACITE',
 'CAPITALSFB',
 'CAPLIPOINT',
 'CAPTRUST',
 'CARBORUNIV',
 'CAREERP',
 'CARERATING',
 'CARTRADE',
 'CARYSIL',
 'CASTROLIND',
 'CCCL',
 'CCHHL',
 'CCL',
 'CDSL',
 'CEATLTD',
 'CEIGALL',
 'CELEBRITY',
 'CELLO',
 'CENTENKA',
 'CENTEXT',
 'CENTRALBK',
 'CENTRUM',
 'CENTUM',
 'CENTURYPLY',
 'CERA',
 'CEREBRAINT',
 'CESC',
 'CGCL',
 'CGPOWER',
 'CHALET',
 'CHAMBLFERT',
 'CHEMBOND',
 'CHEMCON',
 'CHEMFAB',
 'CHEMPLASTS',
 'CHENNPETRO',
 'CHEVIOT',
 'CHOICEIN',
 'CHOLAFIN',
 'CHOLAHLDNG',
 'CIEINDIA',
 'CIGNITITEC',
 'CINELINE',
 'CINEVISTA',
 'CIPLA',
 'CLEAN',
 'CLEDUCATE',
 'CLSEL',
 'CMSINFO',
 'COALINDIA',
 'COASTCORP',
 'COCHINSHIP',
 'COFFEEDAY',
 'COFORGE',
 'COLPAL',
 'COMPUSOFT',
 'COMSYN',
 'CONCOR',
 'CONCORDBIO',
 'CONFIPET',
 'CONSOFINVT',
 'CONTROLPR',
 'CORALFINAC',
 'CORDSCABLE',
 'COROMANDEL',
 'COSMOFIRST',
 'COUNCODOS',
 'CRAFTSMAN',
 'CREATIVE',
 'CREATIVEYE',
 'CREDITACC',
 'CREST',
 'CRISIL',
 'CROMPTON',
 'CROWN',
 'CSBBANK',
 'CSLFINANCE',
 'CTE',
 'CUB',
 'CUBEXTUB',
 'CUMMINSIND',
 'CUPID',
 'CYBERMEDIA',
 'CYBERTECH',
 'CYIENT',
 'CYIENTDLM',
 'DABUR',
 'DALBHARAT',
 'DALMIASUG',
 'DAMODARIND',
 'DANGEE',
 'DATAMATICS',
 'DATAPATTNS',
 'DAVANGERE',
 'DBCORP',
 'DBL',
 'DBOL',
 'DBREALTY',
 'DBSTOCKBRO',
 'DCAL',
 'DCBBANK',
 'DCI',
 'DCM',
 'DCMFINSERV',
 'DCMNVL',
 'DCMSHRIRAM',
 'DCMSRIND',
 'DCW',
 'DCXINDIA',
 'DECCANCE',
 'DEEDEV',
 'DEEPAKFERT',
 'DEEPAKNTR',
 'DEEPINDS',
 'DELHIVERY',
 'DELPHIFX',
 'DELTACORP',
 'DELTAMAGNT',
 'DEN',
 'DENORA',
 'DEVIT',
 'DEVYANI',
 'DGCONTENT',
 'DHAMPURSUG',
 'DHANBANK',
 'DHANI',
 'DHANUKA',
 'DHARMAJ',
 'DHRUV',
 'DHUNINV',
 'DIACABS',
 'DIAMINESQ',
 'DIAMONDYD',
 'DICIND',
 'DIFFNKG',
 'DIGIDRIVE',
 'DIGISPICE',
 'DIGJAMLMTD',
 'DIL',
 'DISHTV',
 'DIVGIITTS',
 'DIVISLAB',
 'DIXON',
 'DJML',
 'DLF',
 'DLINKINDIA',
 'DMART',
 'DMCC',
 'DNAMEDIA',
 'DODLA',
 'DOLATALGO',
 'DOLLAR',
 'DOLPHIN',
 'DOMS',
 'DONEAR',
 'DPABHUSHAN',
 'DPSCLTD',
 'DPWIRES',
 'DRCSYSTEMS',
 'DREAMFOLKS',
 'DREDGECORP',
 'DRREDDY',
 'DSSL',
 'DTIL',
 'DUCON',
 'DVL',
 'DWARKESH',
 'DYCL',
 'DYNAMATECH',
 'DYNPRO',
 'E2E',
 'EASEMYTRIP',
 'ECLERX',
 'ECOSMOBLTY',
 'EDELWEISS',
 'EICHERMOT',
 'EIDPARRY',
 'EIFFL',
 'EIHAHOTELS',
 'EIHOTEL',
 'EIMCOELECO',
 'EKC',
 'ELDEHSG',
 'ELECON',
 'ELECTCAST',
 'ELECTHERM',
 'ELGIEQUIP',
 'ELGIRUBCO',
 'ELIN',
 'EMAMILTD',
 'EMAMIPAP',
 'EMAMIREAL',
 'EMBDL',
 'EMCURE',
 'EMIL',
 'EMKAY',
 'EMMBI',
 'EMSLIMITED',
 'EMUDHRA',
 'ENDURANCE',
 'ENERGYDEV',
 'ENGINERSIN',
 'ENIL',
 'ENTERO',
 'EPACK',
 'EPIGRAL',
 'EPL',
 'EQUIPPP',
 'EQUITASBNK',
 'ERIS',
 'EROSMEDIA',
 'ESABINDIA',
 'ESAFSFB',
 'ESCORTS',
 'ESSARSHPNG',
 'ESSENTIA',
 'ESTER',
 'ETHOSLTD',
 'EUREKAFORB',
 'EUROTEXIND',
 'EVEREADY',
 'EVERESTIND',
 'EXCEL',
 'EXCELINDUS',
 'EXICOM',
 'EXIDEIND',
 'EXPLEOSOL',
 'EXXARO',
 'FACT',
 'FAIRCHEMOR',
 'FAZE3Q',
 'FCL',
 'FCSSOFT',
 'FDC',
 'FEDERALBNK',
 'FEDFINA',
 'FEL',
 'FELDVR',
 'FIBERWEB',
 'FIEMIND',
 'FILATEX',
 'FILATFASH',
 'FINCABLES',
 'FINEORG',
 'FINOPB',
 'FINPIPE',
 'FIRSTCRY',
 'FIVESTAR',
 'FLAIR',
 'FLEXITUFF',
 'FLFL',
 'FLUOROCHEM',
 'FMGOETZE',
 'FMNL',
 'FOCUS',
 'FOODSIN',
 'FORCEMOT',
 'FORTIS',
 'FOSECOIND',
 'FSC',
 'FSL',
 'FUSION',
 'GABRIEL',
 'GAEL',
 'GAIL',
 'GALAPREC',
 'GALAXYSURF',
 'GALLANTT',
 'GANDHAR',
 'GANDHITUBE',
 'GANECOS',
 'GANESHBE',
 'GANESHHOUC',
 'GANGAFORGE',
 'GANGESSECU',
 'GARFIBRES',
 'GATECH',
 'GATECHDVR',
 'GATEWAY',
 'GAYAHWS',
 'GEECEE',
 'GEEKAYWIRE',
 'GENCON',
 'GENESYS',
 'GENSOL',
 'GENUSPAPER',
 'GENUSPOWER',
 'GEOJITFSL',
 'GEPIL',
 'GESHIP',
 'GET&D',
 'GFLLIMITED',
 'GHCL',
 'GHCLTEXTIL',
 'GICHSGFIN',
 'GICRE',
 'GILLANDERS',
 'GILLETTE',
 'GINNIFILA',
 'GIPCL',
 'GKWLIMITED',
 'GLAND',
 'GLAXO',
 'GLENMARK',
 'GLFL',
 'GLOBAL',
 'GLOBALE',
 'GLOBALVECT',
 'GLOBE',
 'GLOBUSSPR',
 'GLOSTERLTD',
 'GLS',
 'GMBREW',
 'GMDCLTD',
 'GMMPFAUDLR',
 'GMRINFRA',
 'GMRP&UI',
 'GNA',
 'GNFC',
 'GOACARBON',
 'GOCLCORP',
 'GOCOLORS',
 'GODFRYPHLP',
 'GODHA',
 'GODIGIT',
 'GODREJAGRO',
 'GODREJCP',
 'GODREJIND',
 'GODREJPROP',
 'GOKEX',
 'GOKUL',
 'GOKULAGRO',
 'GOLDENTOBC',
 'GOLDIAM',
 'GOLDTECH',
 'GOODLUCK',
 'GOPAL',
 'GOYALALUM',
 'GPIL',
 'GPPL',
 'GPTHEALTH',
 'GPTINFRA',
 'GRANULES',
 'GRAPHITE',
 'GRASIM',
 'GRAVITA',
 'GREAVESCOT',
 'GREENLAM',
 'GREENPANEL',
 'GREENPLY',
 'GREENPOWER',
 'GRINDWELL',
 'GRINFRA',
 'GRMOVER',
 'GROBTEA',
 'GRPLTD',
 'GRSE',
 'GRWRHITECH',
 'GSFC',
 'GSLSU',
 'GSPL',
 'GSS',
 'GTECJAINX',
 'GTL',
 'GTLINFRA',
 'GTPL',
 'GUFICBIO',
 'GUJALKALI',
 'GUJAPOLLO',
 'GUJGASLTD',
 'GUJRAFFIA',
 'GULFOILLUB',
 'GULFPETRO',
 'GULPOLY',
 'GVKPIL',
 'GVPTECH',
 'HAL',
 'HAPPSTMNDS',
 'HAPPYFORGE',
 'HARDWYN',
 'HARIOMPIPE',
 'HARRMALAYA',
 'HARSHA',
 'HATHWAY',
 'HATSUN',
 'HAVELLS',
 'HAVISHA',
 'HBLPOWER',
 'HBSL',
 'HCC',
 'HCG',
 'HCL-INSYS',
 'HCLTECH',
 'HDFCAMC',
 'HDFCBANK',
 'HDFCLIFE',
 'HDIL',
 'HEADSUP',
 'HECPROJECT',
 'HEG',
 'HEIDELBERG',
 'HEMIPROP',
 'HERANBA',
 'HERCULES',
 'HERITGFOOD',
 'HEROMOTOCO',
 'HESTERBIO',
 'HEUBACHIND',
 'HEXATRADEX',
 'HFCL',
 'HGINFRA',
 'HGS',
 'HIKAL',
 'HIL',
 'HILTON',
 'HIMATSEIDE',
 'HINDALCO',
 'HINDCOMPOS',
 'HINDCON',
 'HINDCOPPER',
 'HINDMOTORS',
 'HINDOILEXP',
 'HINDPETRO',
 'HINDUNILVR',
 'HINDWAREAP',
 'HINDZINC',
 'HIRECT',
 'HISARMETAL',
 'HITECH',
 'HITECHCORP',
 'HITECHGEAR',
 'HLEGLAS',
 'HLVLTD',
 'HMAAGRO',
 'HMT',
 'HMVL',
 'HNDFDS',
 'HOMEFIRST',
 'HONASA',
 'HONAUT',
 'HONDAPOWER',
 'HOVS',
 'HPAL',
 'HPIL',
 'HPL',
 'HSCL',
 'HTMEDIA',
 'HUBTOWN',
 'HUDCO',
 'HUHTAMAKI',
 'HYBRIDFIN',
 'ICDSLTD',
 'ICEMAKE',
 'ICICIBANK',
 'ICICIGI',
 'ICICIPRULI',
 'ICIL',
 'ICRA',
 'IDBI',
 'IDEA',
 'IDEAFORGE',
 'IDFCFIRSTB',
 'IEL',
 'IEX',
 'IFBAGRO',
 'IFBIND',
 'IFCI',
 'IFGLEXPOR',
 'IGARASHI',
 'IGL',
 'IGPL',
 'IIFL',
 'IIFLSEC',
 'IITL',
 'IKIO',
 'IL&FSENGG',
 'IL&FSTRANS',
 'IMAGICAA',
 'IMFA',
 'IMPAL',
 'IMPEXFERRO',
 'INCREDIBLE',
 'INDBANK',
 'INDGN',
 'INDHOTEL',
 'INDIACEM',
 'INDIAGLYCO',
 'INDIAMART',
 'INDIANB',
 'INDIANCARD',
 'INDIANHUME',
 'INDIASHLTR',
 'INDIGO',
 'INDIGOPNTS',
 'INDNIPPON',
 'INDOAMIN',
 'INDOBORAX',
 'INDOCO',
 'INDORAMA',
 'INDOSTAR',
 'INDOTECH',
 'INDOTHAI',
 'INDOUS',
 'INDOWIND',
 'INDRAMEDCO',
 'INDSWFTLAB',
 'INDSWFTLTD',
 'INDTERRAIN',
 'INDUSINDBK',
 'INDUSTOWER',
 'INFIBEAM',
 'INFOBEAN',
 'INFY',
 'INGERRAND',
 'INNOVACAP',
 'INOXGREEN',
 'INOXINDIA',
 'INOXWIND',
 'INSECTICID',
 'INSPIRISYS',
 'INTELLECT',
 'INTENTECH',
 'INTERARCH',
 'INTLCONV',
 'INVENTURE',
 'IOB',
 'IOC',
 'IOLCP',
 'IONEXCHANG',
 'IPCALAB',
 'IPL',
 'IRB',
 'IRCON',
 'IRCTC',
 'IREDA',
 'IRFC',
 'IRIS',
 'IRISDOREME',
 'IRMENERGY',
 'ISEC',
 'ISFT',
 'ISGEC',
 'ITC',
 'ITDC',
 'ITDCEM',
 'ITI',
 'IVC',
 'IVP',
 'IWEL',
 'IXIGO',
 'IZMO',
 'J&KBANK',
 'JAGRAN',
 'JAGSNPHARM',
 'JAIBALAJI',
 'JAICORPLTD',
 'JAIPURKURT',
 'JAMNAAUTO',
 'JASH',
 'JAYAGROGN',
 'JAYBARMARU',
 'JAYNECOIND',
 'JAYSREETEA',
 'JBCHEPHARM',
 'JBMA',
 'JCHAC',
 'JETAIRWAYS',
 'JETFREIGHT',
 'JGCHEM',
 'JHS',
 'JINDALPHOT',
 'JINDALPOLY',
 'JINDALSAW',
 'JINDALSTEL',
 'JINDRILL',
 'JINDWORLD',
 'JIOFIN',
 'JISLDVREQS',
 'JISLJALEQS',
 'JITFINFRA',
 'JKCEMENT',
 'JKIL',
 'JKLAKSHMI',
 'JKPAPER',
 'JKTYRE',
 'JLHL',
 'JMA',
 'JMFINANCIL',
 'JNKINDIA',
 'JOCIL',
 'JPOLYINVST',
 'JPPOWER',
 'JSFB',
 'JSL',
 'JSWENERGY',
 'JSWHL',
 'JSWINFRA',
 'JSWSTEEL',
 'JTEKTINDIA',
 'JTLIND',
 'JUBLFOOD',
 'JUBLINDS',
 'JUBLINGREA',
 'JUBLPHARMA',
 'JUNIPER',
 'JUSTDIAL',
 'JWL',
 'JYOTHYLAB',
 'JYOTICNC',
 'JYOTISTRUC',
 'KABRAEXTRU',
 'KAJARIACER',
 'KAKATCEM',
 'KALAMANDIR',
 'KALYANI',
 'KALYANIFRG',
 'KALYANKJIL',
 'KAMATHOTEL',
 'KAMDHENU',
 'KAMOPAINTS',
 'KANANIIND',
 'KANORICHEM',
 'KANPRPLA',
 'KANSAINER',
 'KAPSTON',
 'KARMAENG',
 'KARURVYSYA',
 'KAUSHALYA',
 'KAVVERITEL',
 'KAYA',
 'KAYNES',
 'KBCGLOBAL',
 'KCP',
 'KCPSUGIND',
 'KDDL',
 'KEC',
 'KECL',
 'KEEPLEARN',
 'KEI',
 'KELLTONTEC',
 'KERNEX',
 'KESORAMIND',
 'KEYFINSERV',
 'KFINTECH',
 'KHADIM',
 'KHAICHEM',
 'KHAITANLTD',
 'KHANDSE',
 'KICL',
 'KILITCH',
 'KIMS',
 'KINGFA',
 'KIOCL',
 'KIRIINDUS',
 'KIRLOSBROS',
 'KIRLOSENG',
 'KIRLOSIND',
 'KIRLPNU',
 'KITEX',
 'KKCL',
 'KMSUGAR',
 'KNRCON',
 'KOHINOOR',
 'KOKUYOCMLN',
 'KOLTEPATIL',
 'KOPRAN',
 'KOTAKBANK',
 'KOTARISUG',
 'KOTHARIPET',
 'KOTHARIPRO',
 'KPIGREEN',
 'KPIL',
 'KPITTECH',
 'KPRMILL',
 'KRBL',
 'KREBSBIO',    
 'KRIDHANINF',
 'KRISHANA',
 'KRITI',
 'KRITIKA',
 'KRITINUT',
 'KRN',
 'KRONOX',
 'KROSS',
 'KRSNAA',
 ]


# Ask user for the price range
price_low = float(input("Enter the lower price range: "))
price_high = float(input("Enter the upper price range: "))

# Filter stocks by the specified price range
filtered_stocks = filter_stocks_by_price(nse_stocks, price_low, price_high)

# Print the filtered stocks
if filtered_stocks:
    print("\nStocks within the specified price range:")
    for stock in filtered_stocks:
        print(f"Ticker: {stock[0]}, Closing Price: {stock[1]:.2f}")
else:
    print("No stocks found within the specified price range.")
